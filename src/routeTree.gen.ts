/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoremImport } from './routes/lorem'
import { Route as DolorImport } from './routes/dolor'
import { Route as IndexImport } from './routes/index'
import { Route as ValueValueImport } from './routes/value.$value'
import { Route as ColorRGBImport } from './routes/color.$r.$g.$b'

// Create/Update Routes

const LoremRoute = LoremImport.update({
  path: '/lorem',
  getParentRoute: () => rootRoute,
} as any)

const DolorRoute = DolorImport.update({
  path: '/dolor',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ValueValueRoute = ValueValueImport.update({
  path: '/value/$value',
  getParentRoute: () => rootRoute,
} as any)

const ColorRGBRoute = ColorRGBImport.update({
  path: '/color/$r/$g/$b',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dolor': {
      id: '/dolor'
      path: '/dolor'
      fullPath: '/dolor'
      preLoaderRoute: typeof DolorImport
      parentRoute: typeof rootRoute
    }
    '/lorem': {
      id: '/lorem'
      path: '/lorem'
      fullPath: '/lorem'
      preLoaderRoute: typeof LoremImport
      parentRoute: typeof rootRoute
    }
    '/value/$value': {
      id: '/value/$value'
      path: '/value/$value'
      fullPath: '/value/$value'
      preLoaderRoute: typeof ValueValueImport
      parentRoute: typeof rootRoute
    }
    '/color/$r/$g/$b': {
      id: '/color/$r/$g/$b'
      path: '/color/$r/$g/$b'
      fullPath: '/color/$r/$g/$b'
      preLoaderRoute: typeof ColorRGBImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dolor': typeof DolorRoute
  '/lorem': typeof LoremRoute
  '/value/$value': typeof ValueValueRoute
  '/color/$r/$g/$b': typeof ColorRGBRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dolor': typeof DolorRoute
  '/lorem': typeof LoremRoute
  '/value/$value': typeof ValueValueRoute
  '/color/$r/$g/$b': typeof ColorRGBRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dolor': typeof DolorRoute
  '/lorem': typeof LoremRoute
  '/value/$value': typeof ValueValueRoute
  '/color/$r/$g/$b': typeof ColorRGBRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/dolor' | '/lorem' | '/value/$value' | '/color/$r/$g/$b'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/dolor' | '/lorem' | '/value/$value' | '/color/$r/$g/$b'
  id:
    | '__root__'
    | '/'
    | '/dolor'
    | '/lorem'
    | '/value/$value'
    | '/color/$r/$g/$b'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DolorRoute: typeof DolorRoute
  LoremRoute: typeof LoremRoute
  ValueValueRoute: typeof ValueValueRoute
  ColorRGBRoute: typeof ColorRGBRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DolorRoute: DolorRoute,
  LoremRoute: LoremRoute,
  ValueValueRoute: ValueValueRoute,
  ColorRGBRoute: ColorRGBRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dolor",
        "/lorem",
        "/value/$value",
        "/color/$r/$g/$b"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dolor": {
      "filePath": "dolor.tsx"
    },
    "/lorem": {
      "filePath": "lorem.tsx"
    },
    "/value/$value": {
      "filePath": "value.$value.tsx"
    },
    "/color/$r/$g/$b": {
      "filePath": "color.$r.$g.$b.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
